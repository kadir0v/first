<!DOCTYPE>
<html>
<head>
<meta charset-'utf-8'>
<link rel='stylesheet' href='C:/Users/iggy/Desktop/programming/book-project/css/css_styles.css' type='text/css'>
<title>Средства навигации. Гиперссылки</title>
</head>
<body>
<h2>Текстовые гиперссылки</h2>
<p>В предыдущих главах мы наполняли веб-страницы содержимым: текстом, графическими изображениями, аудио- и видеороликами и таблицами. Теперь, по крайней мере, некоторые веб-страницы у нас полностью готовы. (А остальные можно сделать по образу и подобию уже созданных.)</p>
<p>Осталось связать эти разрозненные веб-страницы воедино — в веб-сайт. Как это осуществить? С помощью средств навигации — гиперссылок.Гиперссылка обычно выглядит как подчеркнутый фрагмент текста; если навести на него курсор мыши, он примет вид "указующего перста". При щелчке на гиперссылке браузер загрузит веб-страницу, интернет-адрес которой указан в параметрах данной гиперссылки (целевую веб-страницу). Гиперссылка может иметь вид графического изображения или его фрагмента, такие гиперссылки сейчас очень популярны.</p>
<p>Гиперссылка создаётся просто - при помощи тега <code>&lt;a&gt;</code> и атрибута <code>href</code>. Создать текстовую гиперссылку очень просто. Достаточно найти в блочном элементе (например, абзаце) фрагмент текста, который нужно превратить в гиперссылку, и заключить его в парный тег <code>&lt;a&gt;</code>. Интернет-адрес целевой веб-страницы указывают в атрибуте <code>href</code> этого тега.</p>
<p>Вот гиперссылка, которая указывает на веб-страницу main.html, хранящуюся в папке pages, вложенной в корневую папку сайта, на сайте http://abcd.com:</p>
<code>&lt;a href='http://abcd.com/pages/main.html'&gt;Главная&lt;a&gt;</code>
<p>А эта гиперссылка указывает на архивный файл archive.zip, хранящийся в той же папке, что и веб-страница, которая в данный момент открыта в браузере (текущая веб-страница):<p>
<code>&lt;a href='archive.zip'&gt;Архив&lt;a&gt;</code>
<p>При щелчке на эту гиперссылку браузер предложит загрузить этот архивный файл и либо открыть его, либо сохранить на диске клиентского компьютера. Пример:</p>
<p><code>&lt;p&gt;&lt;a href=’22.html’&gt;Предыдущая страница&lt;/a&gt;,&lt;a href='24.html'&gt;следующая страница&lt;/a&gt;.&lt;/p&gt;</code></p>
<p>Тег <code>&lt;a&gt;</code> поддерживает необязательный атрибут <code>target</code>. Он задает цель гиперссылки, указывающую, где будет открыта целевая веб-страница. Так, если атрибуту <code>target</code> присвоить значение <code>"_blank"</code>, целевая страница будет открыта в новом окне браузера. Например, если мы изменим код первого примера гиперссылки таким образом (исправления выделены жирным шрифтом):</p>
<code>&lt;a href='http://abcd.com/pages/main.html' <strong>target='_blank'</strong>&gt;Главная&lt;a&gt;</code>
<p>"Главная" страница будет открыта в новом окне браузера. Чтобы задать обычное поведение гиперссылки (когда целевая страница открывается в том же окне браузера), нужно присвоить атрибуту <code>target</code> значение <code>'_self'</code> (это его значение по умолчанию) или вообще убрать данный атрибут из тега &lt;a&gt;.</p>
<p>Имеется также возможность создать гиперссылку, которая никуда не указывает ("пустая" гиперссылка). Для этого достаточно задать в качестве значения атрибута <code>href</code> значок # ("решётка"):</p>
<code>&lt;a href='#'>а я никуда не веду&lt;a&gt;</code>
<p>"Пустыми" гиперссылками мы будем активно пользоваться когда начнём писать веб-сценарии.</p>
<h6>На заметку. Правила отображения гиперссылок браузером:</h6>
<ul>
<li>обычные гиперссылки выделяются синим цветом;</li>
<li>гиперссылки, по которым посетитель уже "ходил" (посещённые гиперссылки), выводятся тёмно-красным цветом;</li>
<li>гиперссылка, по которой посетитель в данный момент щёлкает (активная гиперссылка), выводится ярко-красным цветом;</li>
<li>текст любых гиперссылок подчёркивается;</li>
<li>при помещении курсора мыши на гиперссылку браузер меняет его форму на "указующий перст".</li>
</ul>
<p><a href='C:/Users/iggy/Desktop/programming/book-project/index.html'><em>Вернуться на главную</em></a></p>

	<h2>Почтовые гиперссылки</h2>
<p>HTML позволяет нам создать гиперссылку, указывающую на адрес электронной почты (почтовую гиперссылку), щелчок по которой запустит программу почтового клиента, установленную в системе по умолчанию. Интернет-адрес такой гиперссылки записывается особым образом.</p>
<p>Пусть мы хотим создать гиперссылку, указывающую на почтовый адрес:</p>
<code>user@mailserver.ru</code>
<p>Согласно стандарту HTML, этот почтовый адрес должен быть записан так:<p>
<code>mailto: user@mailserver.ru</code>
<p>причём между двоеточием после <code>mailto</code> и собственно адресом не должно быть пробелов. Тогда наша почтовая гиперссылка будет выглядеть так:</p>
<code>&lt;a href='mailto: user@mailserver.ru'&gt;Отправить письмо&lt;/a&gt;</code>
<p>В конце главной веб-страницы у нас приведены сведения о правах разработчиков. Давайте превратим слово "Кадиров" (фамилия главного разработчика) в почтовую гиперссылку. Создающий её HTML-код будет выглядеть так:</p>
<code>&lt;a href='mailto: ignatyoung@gmail.com'&gt;Кадиров&lt;/a&gt;</code>

<h4>Дополнительные возможности гиперссылок</h4>
<p>Язык HTML предлагает нам некоторые дополнительные возможности для создания гиперссылок. Их применяют нечасто, но иногда они полезны. Прежде всего, мы можем указать для гиперссылки "горячую" клавишу. Если посетитель нажмёт эту клавишу, удерживая нажатой клавишу &lt;Alt&gt;, браузер выполнит переход по данной гиперссылке. Для указания "горячей" клавиши предусмотрен необязательный атрибут <code>accesskey</code> тега <code>&lt;a&gt;</code>. Значение этого атрибута — латинская буква, соответствующая нужной клавише:</p>
<code>&lt;a href='http://abcd.com/pages/main.html'accesskey='D'&gt;Главная&lt;a&gt;</code>
<p>Здесь мы указали для гиперссылки "горячую" клавишу &lt;d&gt;. И, чтобы перейти по ней, посетителю будет достаточно нажать комбинацию клавиш &ltAlt&gt;+&lt;D&gt;.  На гиперссылках можно щёлкать мышью — так поступает большинство пользователей. Но по ним также можно "путешествовать" с помощью клавиатуры. В этом случае говорят о фокусе ввода — признаке, какая гиперссылка будет обрабатывать нажатия клавиш. Гиперссылка, имеющая фокус ввода, выделяется тонкой черной штриховой рамкой.</p>
<ul>
<li>Если нажать клавишу &lt;Enter&gt;, браузер выполнит переход по гиперссылке, имеющей в данный момент фокус ввода.</li>
<li>Если нажать клавишу &lt;Tab&gt;, браузер перенесёт фокус ввода на следующую гиперссылку.</li>
<li>Если нажать комбинацию клавиш &lt;Shift&gt;+&lt;Tab&gt;, браузер перенесёт фокус ввода на предыдущую гиперссылку.</li>
</ul>
<p>Порядок, в котором выполняется перенос фокуса ввода с одной гиперссылки на другую при нажатии клавиш &lt;Tab&gt; или &lt;Shift&gt;+&lt;Tab&gt;, так и называется — порядок обхода. По умолчанию он совпадает с порядком, в котором гиперссылки определены в HTML-коде веб-страницы. Но мы можем указать свой порядок обхода с помощью атрибута tabindex тега &lt;a&gt;. Его значение — целое число от –32 767 до 32 767 — <em>номер в порядке обхода</em>.</p>
<ul>
<li>Если указан положительный номер, именно он будет определять порядок обхода. Иными словами, сначала фокус ввода получит гиперссылка с номером 1, потом — с номером 2, далее — с номером 3 и т. д.</li>
<li>Если указан номер, равный нулю, обход будет осуществляться в порядке, в котором гиперссылка определена в HTML-коде веб-страницы. Фактически ноль — значение атрибута тега TABINDEX по умолчанию.</li>
<li>Если указан отрицательный номер, данная гиперссылка вообще исключается из порядка обхода. До нее невозможно будет добраться с помощью клавиатуры — можно будет только щелкать мышью.</li>
</ul>
<p>Рассмотрим небольшой пример:</p>
<p><code>&lt;a href='page1.html' tabindex='3'&gt;Страница 1&lt;/a&gt;</code></p>
<p><code>&lt;a href='page2.html' tabindex='2'&gt;Страница 2&lt;/a&gt;</code></p>
<P><code>&lt;a href='page3.html' tabindex='1'&gt;Страница 1&lt;/a&gt;</code></p>
<p>Этот HTML-код создает три гиперссылки с "обратным" порядком обхода. Сначала фокус ввода получит гиперссылка "Страница 3", потом — "Страница 2" и напоследок — "Страница 1".

	<h2>Изображения-гиперссылки</h2>
<p>HTML позволяет использовать в качестве содержимого гиперссылки любой фрагмент любого блочного элемента, в том числе и графическое изображение, т. е. создать изображение-гиперссылку. Для создания изображения гиперссылки достаточно поместить внутрь тега <code>&lt;a&gt;</code> тег <code>&lt;img&gt;</code>:</p>
<p><code>&lt;a href='http://www.w3.org'&gt;&lt;img src='w3logo.gif'&gt;&lt;/a&gt;</code></p>
<p>Этот HTML-код создаёт изображение-гиперссылку, указывающую на веб-сайт организации W3C. А в качестве самого изображения выбран логотип этой организации, который мы сохранили в файле в той же папке, где находится файл текущей веб-страницы.</p>
<p><code>&lt;a href='mailto: user@mailserver.ru'&gt;&lt;img src='email.gif'&gt;&lt/a&gt;</code></p>
<p>А этот HTML-код создаёт почтовую изображение-гиперссылку. Правила вывода изображений-гиперссылок браузером:</p>
<ul>
<li>изображение-гиперссылка окружается рамкой, имеющей соответствующий гиперссылке цвет: синий — для непосещённой, темно-красный — для посещённой и т. д.;</li>
<li>при помещении курсора мыши на изображение-гиперссылку браузер меняет его форму на "указующий перст", как и в случае текстовой гиперссылки. Рамка вокруг изображения-гиперссылки зачастую выглядит непрезентабельно, поэтому её обычно убирают, задав соответствующее представление.</li>
</ul>
<h2>Изображения-карты</h2>
<p>HTML позволяет превратить в гиперссылку часть графического изображения. Более того, мы можем разбить изображение на части, каждая из которых будет представлять собой гиперссылку, указывающую на свой интернет-адрес. Такие изображения называют изображениями-картами, а её части-гиперссылки — "горячими" областями. С помощью изображений-карт часто создают заголовки веб-сайтов, фрагменты которого представляют собой гиперссылки, указывающие на определенную веб- страницу. Пик популярности изображений-карт давно прошёл, однако их ещё можно довольно часто встретить.</p>
<p>Изображение-карту создают в три этапа.</p>
<ol>
	<li><pre>Создание самого изображения с помощью хорошо нам знакомого тега <code>&lt;img&gt;</code>:
<code>&lt;img src='map.gif'&gt;</code></pre></li>
	<li>Создание карты, особого элемента веб-страницы, который описывает набор "горячих" областей изображения-карты. Сама карта на веб-странице никак не отображается. Карту создают с помощью парного тега <code>&lt;map&gt;</code>:
<code>&lt;map name='first'&gt;&lt;/map&gt;</code></li>
<p> ! Внимание: с помощью обязательного атрибута <code>name</code> тега &lt;map&gt; задаётся уникальное в пределах веб-страницы имя карты. Оно однозначно идентифицирует данную карту, может содержать только латинские буквы, цифры и знаки подчёркивания и начинаться должно с буквы:</p>
<p><code>&lt;map name='first'&gt;&lt;map&gt;</code></p>
<p>После создания карты следует привязать её к созданному на первом этапе изображению. Для этого мы применим обязательный в данном случае атрибут <code>usemap</code> тега <code>&lt;img&gt;</code>. Его значение — имя привязываемой к изображению карты, причём в начале этого имени обязательно следует поставить символ # ("решётка"). (В имени, заданном атрибутом <code>name</code> тега <code>&lt;map&gt;</code>, символ # присутствовать не должен.)</p>
<code>&lt;img src='map.gif' usemap='#first'&gt;</code>
	<li>На третьем этапе создают описания самих "горячих" областей в карте. Их помещают внутрь соответствующего тега <code>&lt;map&gt;</code> и формируют с помощью одинарных тегов <code>&lt;area&gt;</code>:
<p><code>&lt;area [shape='rect|circle|poly'] coords="<набор параметров>' href='<интернет-адрес гиперссылки>'|nohref target='<цель гиперссылки>'&gt;</code></p></li>
</ol>
<p>Необязательный атрибут shape задаёт форму "горячей" области. Обязательный атрибут coords перечисляет координаты, необходимые для построения этой области.</p>
<p>Значения атрибута <code>shape</code>:</p>
<ul>
	<li><code>'rect'</code> — прямоугольная "горячая" область. Атрибут <code>coords</code> в этом случае записывается в виде <code>coords='&lt;X1&gt;,&lt;Y1&gt;,&lt;X2&gt;,&lt;Y2&gt;'</code>, где X1 и Y1 — координаты верхнего левого, а X2 и Y2 — правого нижнего угла прямоугольника. Кстати, если атрибут shape отсутствует, создается именно прямоугольная область;</li>
	<li><code>'circle'</code> — круглая "горячая" область. В этом случае атрибут coords имеет вид <code>coords='&lt;X центра&gt;,&lt;Y центра&gt;,&lt;радиус&gt;'</code>;</li>
	<li><code>'poly'</code> — "горячая" область в виде многоугольника. Атрибут <code>coords</code> должен иметь вид <code>coords='&lt;X1&gt;,&lt;Y1&gt;,&lt;X2&gt;,&lt;Y3&gt;,&lt;X3&gt;,&lt;Y3&gt;…'</code>, где Xn и Yn — координаты соответствующей вершины многоугольника.</li>
</ul>
<p>Атрибут href задает интернет-адрес гиперссылки — он, собственно, нам уже знаком. Он может быть заменен атрибутом без значения nohref, задающим область, не связанную ни с каким интернет-адресом. Это позволяет создавать оригинальные изображения-карты, например, карту в виде бублика, "дырка" которого никуда не указывает. Также знакомый нам атрибут target задаёт цель гиперссылки. (Конечно, указывать его имеет смысл только в том случае, если мы создаем именно "горячую" область, а не "дырку" с атрибутом nohref.)</p>
<p>Вот как выглядит полный HTML-код, создающий изображение-карту:</p>
<p><code><pre>&lt;map name="samplemap"&gt;
&lt;area shape='circle' coords='50,50,30' href='page1.html'&gt;
&lt;area shape='circle' coords='50,150,30' href='page2.html'&gt;
&lt;area shape='poly' coords='100,50,100,100,150,50,100,50' nohref&gt;
&lt;area shape='rect' coords='0,100,30,100' href='appendix.html' target='_blank'&gt;
&lt;/map&gt;</pre></code></p>
<p>Здесь мы создали две круглые "горячие" области, указывающие на веб-страницы page1.html и page2.html, многоугольную область, не ссылающуюся никуда, и прямоугольную область, ссылающуюся на веб-страницу appendix.html. Причем последняя "горячая" область при щелчке на ней откроет веб-страницу в новом окне браузера.</p>
<h2>Полоса навигации</h2>
<p>Гиперссылки не всегда "ходят поодиночке". Довольно часто на веб-страницах присутствуют целые наборы гиперссылок, ссылающихся на разные веб-страницы данного веб-сайта. Такие наборы называются полосами навигации.</p>
<p>Полоса навигации может быть расположена по горизонтали, вверху или внизу веб-страницы, или по вертикали, слева или справа. Горизонтальную полосу навигации можно сформировать с помощью обычного абзаца или таблицы с одной строкой и нужным числом ячеек (каждая гиперссылка располагается в своей ячейке таблицы). Вертикальную полосу навигации обычно формируют с помощью таблицы из одного столбца и нужного числа ячеек (опять же, каждая гиперссылка располагается в своей ячейке таблицы), набора абзацев (каждая гиперссылка представляет собой отдельный абзац) или в виде списка (гиперссылки представляют собой пункты этого списка).</p>
<p>Гиперссылки полосы навигации могут быть текстовыми или графическими. В последнем случае практически всегда применяют изображения-гиперссылки. Зачастую для изображений-гиперссылок реализуют особое поведение, заменяющее изображение другим при наведении на соответствующую гиперссылку курсора мыши.</p>
<p>Полосу гиперссылок всегда выделяют, чтобы привлечь к ней внимание посетителя. Её могут выделить цветом текста и фона, рамкой, увеличенным размером шрифта или всем вместе. Все это реализуется с помощью задания соответствующего представления веб-страницы. Давайте создадим на главной веб-странице нашего веб-сайта полосу навигации с гиперссылками, указывающими на другие его веб-страницы: посвященную CSS, содержащую список примеров и сведения о разработчиках. Для простоты реализуем её в виде абзаца, содержащего нужные гиперссылки. Поместим её в самом верху веб-страницы, перед заголовком:</p>
<p><code><pre>&lt;a href='C:/Users/iggy/Desktop/programming/book-project/css/css.html'&gt;CSS&lt;/a&gt;
&lt;a href='C:/Users/iggy/Desktop/programming/book-project/examples.html'&gt;Примеры&lt;/a&gt;
&lt;a href='C:/Users/iggy/Desktop/programming/book-project/about.html'&gt;О разработчиках&lt;/a&gt;&lt;/p&gt;</pre></code></p>
<p>Пример:</p>
<p><a href='C:/Users/iggy/Desktop/programming/book-project/css/main_css.html'>CSS</a>
<a href='C:/Users/iggy/Desktop/programming/book-project/examples.html'>Примеры</a>
<a href='C:/Users/iggy/Desktop/programming/book-project/about.html'>О разработчиках</a></p>
</body>
</html>