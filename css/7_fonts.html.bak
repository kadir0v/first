<!DOCTYPE html>
<HTML lang='ru'>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=utf-8">
<link rel='stylesheet' href='css_styles.css' type='text/css'>
<TITLE>Параметры шрифта и фона</TITLE>
</HEAD>
<BODY>
<h2>Параметры шрифта и фона</h2>
<p>Начнём с атрибутов стиля, задающих параметры шрифта, которым набран текст. Ведь текст на веб-страницах — всему голова.</p>
<p>Атрибут стиля <code>font-family</code> задаёт имя шрифта, которым будет выведен текст:</p>
<p><code>font-family: <em>&lt;список имён шрифтов&gt;</em>, разделённых запятыми&gt;</code>/<code>inherit</code></p>
<p>Имена шрифтов задаются в виде их названий, например, Arial или Times New Roman. Если имя шрифта содержит пробелы, его нужно взять в кавычки:</p>
<pre><code>p { font-family: Arial }
H1 (font-family: "Times New Roman" }</code></pre>
<p>Если данный атрибут стиля присутствует во встроенном стиле, кавычки заменяют апострофами:</p>
<code>&lt;p style="font-family: 'Times New Roman'"></code>
<p>Если указанный нами шрифт присутствует на компьютере посетителя, браузер его использует. Если же такого шрифта нет, то текст выводится шрифтом, заданным в настройках по умолчанию. И наша веб-страница, возможно, будет выглядеть не так, как мы задумывали. (Впрочем, шрифты Arial и Times New Roman присутствуют на любом компьютере, работающем под управлением Windows.) Можно указать несколько наименований шрифтов через запятую:</p>
<code>p { font-family: Verdana, Arial }</code>
<p>Тогда браузер сначала будет искать первый из указанных шрифтов, в случае неудачного поиска — второй, потом третий и т. д. Вместо имени конкретного шрифта можно задать имя одного из семейств шрифтов, представляющих целые наборы аналогичных шрифтов. Таких семейств пять: serif (шрифты с засечками), sans-serif (шрифты без засечек), cursive (шрифты, имитирующие рукописный текст), fantasy (декоративные шрифты) и monospace (моноширинные шрифты):</p>
<code>H2 { font-family: Verdana, Arial, sans-serif }</code>
<p>Особое значение <code>inherit</code> указывает, что текст данного элемента веб-страницы должен быть набран тем же шрифтом, что и текст родительского элемента. Говорят, что в данном случае элемент веб-страницы "наследует" шрифт от родительского элемента.</p>
<p>Это, кстати, значение атрибута стиля <code>font-family</code> по умолчанию. Атрибут стиля <code>font-size</code> определяет размер шрифта:</p>
<p><code>font-size: &lt;размер&gt;</code>/<code>xx-small</code>/<code>x-small</code>/<code>small</code>/<code>medium</code>/<code>large</code>/<code>x-large</code>/<code>xx-large</code>/<code>larger</code>/<code>smaller</code>/<code>inherit</code></p>
<p>Размер шрифта можно задать в абсолютных и относительных величинах. Для этого используется одна из единиц измерения, поддерживаемая CSS:</p>
<img src='https://storage.yandexcloud.net/wr4img/529467_i_018.png'>
<p>Обозначение выбранной единицы измерения указывают после самого значения:</p>
<code>p { font-size: 10pt } strong { font-size: 1cm } em { font-size: 150 % }</code>
<p>Отметим, что все приведенные в таблице выше единицы измерения подходят для задания значений других атрибутов стилей CSS.</p>
<p>Кроме числовых, атрибут <code>font-size</code> может принимать и символьные значения. Так, значения от <code>xx-small</code> до <code>xx-large</code> задают семь предопределенных размеров шрифта, от самого маленького до самого большого. А значения <code>larger</code> и <code>smaller</code> представляют следующий размер шрифта, соответственно, по возрастанию и убыванию. Например, если для родительского элемента определён шрифт размера <code>medium</code>, то значение <code>larger</code> установит для текущего элемента размер шрифта <code>large</code>.</p>
<p>Значение <code>inherit</code> указывает, что данный элемент веб-страницы должен иметь тот же размер шрифта, что и родительский элемент. Это значение атрибута стиля <code>font-size</code> по умолчанию.</p>
<p>Атрибут стиля <code>color</code> задаёт цвет текста:</p>
<p><code>color: &lt;цвет&gt;</code>/<code>inherit</code></p>
<p>Ранее мы упоминали, что цвет можно задать так называемым RGB-кодом (Red, Green, Blue — красный, зелёный, синий). Он записывается в формате</p>
<p><code>&num;&lt;доля красного цвета&gt;&lt;доля зеленого цвета&gt;&lt;доля синего цвета&gt;</code>,</p>
<p>где доли всех цветов указаны в виде шестнадцатеричных чисел от 00 до FF. Зададим для текста красный цвет:</p>
<code>h1 { color: #FF0000 }</code>
<p>А теперь серый цвет:</p>
<code>adress { color: #CCCCCC }</code>
<p>Кроме того, CSS позволяет задавать цвета по именам. Так, значение black соответствует черному цвету, white — белому, red — красному, green — зеленому, а blue — синему.</p>
<p>Пример:</p>
<code>H1 { color: red }</code>
<p>Полный список имен и соответствующих им цветов можно посмотреть на <a href='http://msdn.microsoft.com/en-us/library/aa358802%28v=VS.85%29.aspx'>веб-странице</a>.</p>
<p>Значение <code>inherit</code> указывает, что данный элемент веб-страницы должен иметь тот же цвет шрифта, что и родительский элемент. Это значение атрибута стиля <code>font-size</code> по умолчанию.</p>
<p class='attention'>ВНИМАНИЕ!</p>
<p>Значение <code>inherit</code> поддерживают практически все атрибуты стиля CSS. Оно говорит браузеру, что элемент веб-страницы, к которому привязан стиль, "наследует" значение соответствующего параметра у родительского элемента. У всех атрибутов это значение по умолчанию. В дальнейшем мы не будем описывать данное значение у каждого атрибута стиля; если же какой-то атрибут стиля не поддерживает его, мы специально об этом упомянем.</p>
<p>С помощью атрибута стиля <code>color</code> мы можем, например, задать цвет горизонтальной линии HTML.</p>
<p>Атрибут стиля <code>opacity</code> позволяет указать степень полупрозрачности элемента веб-страницы:</p>
<p><code>opacity: &lt;числовое значение&gt;</code>/<code>inherit</code></p>
<p>Значение полупрозрачности представляет собой число от 0 до 1. При этом 0 обозначает полную прозрачность элемента (т. е. элемент фактически не виден), а 1 — полную непрозрачность (это обычное поведение).</p>
<p>Вот пример задания половинной прозрачности (значение 0,5) для текста фиксированного форматирования:</p>
<code>pre { opacity: 0.5 }</code>
<p>Отметим, как мы указали дробное число — вместо символа запятой здесь используется точка.</p>
<p class='notice'>На заметку</p>
<p>Полупрозрачность обычно целесообразна только для создания специальных эффектов. В обычном тексте применять её не рекомендуется, т. к. это может обескуражить посетителя.</p>
<p>Атрибут стиля <code>font-weight</code> устанавливает "жирность" шрифта:</p>
<p><code>font-weight: normal</code>/<code>bold</code>/<code>bolder</code>/<code>lighter</code>/<code>100</code>/<code>200</code>/<code>300</code>/<code>400</code>/<code>500</code>/<code>600</code>/<code>700</code>/<code>800</code>/<code>900</code>/<code>inherit</code></p>
<p>Здесь доступны семь абсолютных значений от 100 до 900, представляющих различную "жирность" шрифта, от минимальной до максимальной; при этом обычный шрифт будет иметь "жирность" 400 (или <code>normal</code>), а полужирный — 700 (или <code>bold</code>). Значение по умолчанию — 400 (<code>normal</code>). Значения <code>bolder</code> и <code>lighter</code> являются относительными и представляют следующие степени "жирности" соответственно в бóльшую и меньшую сторону.</p>
<p>Пример:</p>
<code>code { font-weight: bold }</code>
<p>Атрибут <code>font-style</code> задаёт начертание шрифта:</p>
<p><code>font-style: normal</code>/<code>italic</code>/<code>oblique</code>/<code>inherit</code></p>
<p>Доступны три значения, представляющие обычный шрифт (<code>normal</code>), курсив (<code>italic</code>) и особое декоративное начертание, похожее на курсив (<code>oblique</code>).</p>
<p>Атрибут стиля <code>text-decoration</code> задаёт "украшение" (подчёркивание или зачёркивание), которое будет применено к тексту:</p>
<p><code>text-decoration: none</code>/<code>underline</code>/<code>overline</code>/<code>line-through</code>/<code>blink</code>/<code>inherit</code></p>
<p>Здесь доступны пять значений (не считая <code>inherit</code>):</p>
<ul>
	<li><code>none</code> убирает все "украшения", заданные для шрифта родительского элемента;</li>
	<li><code>underline</code> подчёркивает текст;</li>
	<li><code>overline</code> "надчёркивает" текст, т. е. проводит линию над строками;</li>
	<li><code>line-through</code> зачёркивает текст;</li>
	<li><code>blink</code> делает шрифт мерцающим (на данный момент не поддерживается Safari).</li>
</ul>
<p class='attention'>ВНИМАНИЕ!</p>
<p>Не следует без особой необходимости задавать для текста подчеркивание. Дело в том, что браузер по умолчанию выводят гиперссылки подчёркнутыми, и подчёркнутый текст, не являющийся гиперссылкой, может обескуражить посетителя.</p>
<p>Атрибут стиля <code>font-variant</code> позволяет указать, как будут выглядеть строчные буквы шрифта:</p>
<p><code>font-variant: normal</code>/<code>small-caps</code>/<code>inherit</code></p>
<p>Значение <code>small-caps</code> задаёт такое поведение шрифта, когда его строчные буквы выглядят точно так же, как прописные, просто имеют меньший размер. Значение <code>normal</code> задаёт для шрифта обычные прописные буквы.</p>
<p>Атрибут стиля <code>text-transform</code> позволяет изменить регистр символов текста:</p>
<p><code>text-transform: capitalize</code>/<code>uppercase</code>/<code>lowercase</code>/<code>none</code>/<code>inherit</code></p>
<p>Мы можем преобразовать текст к верхнему (значение <code>uppercase</code> этого атрибута) или нижнему (<code>lowercase</code>) регистру, преобразовать к верхнему регистру первую букву каждого слова (<code>capitalize</code>) или оставить в изначальном виде (<code>none</code>).</p>
<p>Атрибут стиля <code>line-height</code> задает высоту строки текста:</p>
<p><code>line-height: normal</code>/<code><em>&lt;расстояние&gt;</em></code>/<code>inherit</code></p>
<p>Здесь можно задать абсолютную и относительную величину расстояния, указав соответствующую единицу измерения CSS (таблица выше). При её отсутствии заданное нами значение сначала умножается на высоту текущего шрифта и затем используется. Таким образом, чтобы увеличить высоту строки вдвое по сравнению с обычной, мы можем написать:</p>
<code>p { line-height: 2 }</code>
<p>Значение <code>normal</code> этого атрибута возвращает управление высотой строки браузеру.</p>
<p>Атрибут стиля <code>letter-spacing</code> позволяет задать дополнительное расстояние между символами текста:</p>
<p><code>letter-spacing: normal</code>/<em>&lt;расстояние&gt;</em></code></p>
<p>Отметим, что это именно дополнительное расстояние; оно будет добавлено к изначальному, установленному самим браузером.</p>
<p>Здесь также можно задать абсолютное и относительное расстояние, указав соответствующую единицу измерения CSS (таблица выше). Расстояние может быть положительным и отрицательным; в последнем случае символы шрифта будут располагаться друг к другу ближе обычного. Значение <code>normal</code> устанавливает дополнительное расстояние по умолчанию, равное нулю.</p>
<p>Атрибут стиля <code>letter-spacing</code> не поддерживает значение <code>inherit</code>.</p>
<p>Вот пример задания дополнительного расстояния между символами равного пяти пикселам:</p>
<code>h1 { letter-spacing: 5px }</code>
<p>Текст, набранный такими символами, будет выглядеть разреженным. Пример:</p>
<p class='example_4_letter_spacing'>Вот так</p>
<p>А здесь мы задали отрицательное дополнительное расстояние между символами равным двум пикселам:</p>
<code>h6 { letter-spacing: -2px }</code>
<p>Эти два пиксела будут вычтены из изначального расстояния, в результате символы сблизятся, а текст станет выглядеть сжатым. Возможно, символы даже налезут друг на друга.</p>
<p>Аналогичный атрибут стиля <code>word-spacing</code> задаёт дополнительное расстояние между отдельными словами текста:</p>
<p><code>word-spacing: normal</code>/<code><em>&lt;расстояние&gt;</em></code></p>
<p>Пример:</p>
<code>h1 { word-spacing: 5mm }</code>
<p>Ну, 5 мм, пожалуй, многовато… Хотя это всего лишь пример.</p>
<p>И напоследок рассмотрим атрибут стиля <code>font</code>, позволяющий задать одновременно сразу несколько параметров шрифта:</p>
<code>font: [<em>&lt;начертание&gt;</em>] [<em>&lt;вид строчных букв&gt;</em>] [<em>&lt;"жирность"&gt;</em>] [<em>&lt;размер&gt;/высота строки текста&gt;</em>]] <em>&lt;имя шрифта&gt;</em></code>
<p>Как видим, обязательным является только имя шрифта — остальные параметры могут отсутствовать.</p>
<p>Задаём для текста абзацев шрифт Times New Roman размером 10 пунктов:</p>
<code>p { font: 10pt "Times New Roman" }</code>
<p>А для заголовков шестого уровня — шрифт Arial размером 12 пунктов и курсивного начертания:</p>
<code>h6 { font: italic 12pt Verdana }</code>
</body>
</html>